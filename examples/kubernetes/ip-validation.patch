diff --git a/pkg/api/validation/validation.go b/pkg/api/validation/validation.go
index 3d4d906..bdc2635 100644
--- a/pkg/api/validation/validation.go
+++ b/pkg/api/validation/validation.go
@@ -2594,8 +2594,8 @@ func validateEndpointSubsets(subsets []api.EndpointSubset, fldPath *field.Path)
 
 func validateEndpointAddress(address *api.EndpointAddress, fldPath *field.Path) field.ErrorList {
 	allErrs := field.ErrorList{}
-	if !validation.IsValidIPv4(address.IP) {
-		allErrs = append(allErrs, field.Invalid(fldPath.Child("ip"), address.IP, "must be a valid IPv4 address"))
+	if !validation.IsValidIP(address.IP) {
+		allErrs = append(allErrs, field.Invalid(fldPath.Child("ip"), address.IP, "must be a valid IP address"))
 		return allErrs
 	}
 	return validateIpIsNotLinkLocalOrLoopback(address.IP, fldPath.Child("ip"))
diff --git a/pkg/util/validation/validation.go b/pkg/util/validation/validation.go
index 9607293..d03b6b9 100644
--- a/pkg/util/validation/validation.go
+++ b/pkg/util/validation/validation.go
@@ -160,6 +160,11 @@ func IsValidIPv4(value string) bool {
 	return net.ParseIP(value) != nil && net.ParseIP(value).To4() != nil
 }
 
+// IsValidIP tests that the argument is a valid IP address.
+func IsValidIP(value string) bool {
+	return net.ParseIP(value) != nil
+}
+
 const percentFmt string = "[0-9]+%"
 
 var percentRegexp = regexp.MustCompile("^" + percentFmt + "$")
